name: test

on: pull_request

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            #----------------------------------------------
            #       check-out repo and set-up python
            #----------------------------------------------
            - name: Check out repository
              uses: actions/checkout@v3
            - name: Set up python
              uses: actions/setup-python@v4
              id: setup-python
              with:
                  python-version: "3.11.2"
            #----------------------------------------------
            #  -----  install & configure poetry  -----
            #----------------------------------------------
            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
                  installer-parallel: true
            - name: Cache Poetry virtualenv
              uses: actions/cache@v1
              id: cache
              with:
                  path: ~/.virtualenvs
                  key: poetry-${{ hashFiles('**/poetry.lock') }}
                  restore-keys: |
                      poetry-${{ hashFiles('**/poetry.lock') }}
            - name: Set Poetry config
              run: |
                  poetry config settings.virtualenvs.in-project false
                  poetry config settings.virtualenvs.path ~/.virtualenvs

            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
            # - name: Load cached venv
            #   id: cached-poetry-dependencies
            #   uses: actions/cache@v3
            #   with:
            #       path: .venv
            #       key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            #----------------------------------------------
            # install dependencies if cache does not exist
            #----------------------------------------------
            # - name: Install dependencies
            #   if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            #   run: poetry install --no-interaction --no-root
            # #----------------------------------------------
            # install your root project, if required
            #----------------------------------------------
            - name: Install project
              run: poetry install --no-root
            #----------------------------------------------
            #              run test suite
            #----------------------------------------------
            - run: poetry run pre-commit run --all-files
